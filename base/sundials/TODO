
sundialsTB: cvodes - add support for QuadSens on forward integration
(combine functino types with QuadRhsBS)

sundialsTB: idas - check for bug (if tn is past tout, the return is not 
correct -> it's still at tn!!!)

sundialsTB: consider adding user-supplied error handler.

Update README files in example subdirectories

Complete documentation:
idas - needs work in the math. section
cvode, cvodes, ida, kinsol - updates in usage
idas, cvodes - more on QuadSens, on propagating multiple adjoints, on 2nd order SA
all example documents need serious updates


DONE
Modification to optional mxstep input:
- passing mxstep<0 to ***SetMaxNumSteps disables checking nstloc>=mxstep.
  (this option is useful in some applications but may be dangereous so maybe it
  should not be documented?)

DONE
Modifications to Root Finding:
- added gactive array for rootfinding. 
  Removed INITROOT return flag from Rcheck1 and error return from CVode if
  some g is zero at and close to the initial time (such event functions are
  'deactivated' until they move away from 0).
  However, if after the first successful step there still are 'inactive'
  event functions, a warning is issued to the user since this may indicate
  a bug in the implementation of the root function. This warning is issued 
  only once and can be completely disabled by calling ***SetNoInactiveRootWarn)



DONE
Renamed all SUNDIALS examples to conform to a new common scheme.

DONE
Modified autotools files to use common makefile templates for
the exported examle makefiles. These templates are located in
sundials/examples/templates.


DONE 
Modify acinclude so that the Fortran name-mangling scheme tests are done 
whether FCMIX is enabled or not. This is useful for the case of a platform 
that does not have a Fortran compiler but on which a precompiled Lapack 
library exists. The user should be able to specify the Fortran name-mangling 
scheme (which he can infer by looking at liblapack with either nm or objdump).

DONE
Modify ltmain.sh so that it uses the default CC tag if it is unable
to infer one (and disable the resulting error). This issue arises
in more recent versions of ltmain.sh but the alternative of using
older versions (such as that shipped with sundials-2.3.0) is not
a solution since it introduces a whole lot more problems related
to shared libraries (wrong/no extension, problems recongnizing pgi 
compilers, etc)

DONE
For each solver, create separate libraries with the Lapack interfaces
(so that we do not have to link the Blas/Lapack libraries to an example
that does not use it. Indeed, if the interfaces are in the main library
and we use shared libraries, we get undefined symbols unless we link Lapack)

DONE
Mark all exported functions in the header files (using a preprocessor symbol
defined in sundials_config.h). SUNDIALS_EXPORT is usually empty, except 
when building/using shared dll libraries on Windows.

DONE 
Fix all solvers/examples so that g++ does not choke on functions that take 
a void* argument for a function argument

NOT POSSIBLE WITH CURRENT IMPLEMENTATION
Why do we always build static libraries for the FCMIX interfaces?!?!
- Because otherwise we would get undefined symbols when using shared libraries
  (e.g. when using the dense linear solver, but the user does NOT provide a
   Jacobian function -- this is because of our use of fixed function names)


DONE
Move sundials_config.in and sundials_config.h into include/sundials, from
of src/sundials

DONE
Create a bin directory which contains the templates sundials-config.in
and fortran-update.in. The resulting scripts will be installed in bindir.

DONE
Add Makefile_ex.in in all example directories. 
Modify autotools such that, if a set of examples is compilable, a sample Makefile_ex is also generated
from Makefile_ex.in. Moreover, modify the corresponding Makefile.in such that, on make install,
we install the sources, sample outputs, and the Makefile_ex (renamed Makefile). This way, the
user is provided with a complete set of files on which he/she can test the Sundials installation.
Moreover, this is a fix for the current "istallation" of examples which is broken in case
shared libraries are used (indeed, since we link against stuff in the source tree, after a 
make clean in the source tree, the installed examples will cease to work!)


