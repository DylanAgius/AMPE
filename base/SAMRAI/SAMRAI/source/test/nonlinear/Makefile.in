#########################################################################
##
## This file is part of the SAMRAI distribution.  For full copyright 
## information, see COPYRIGHT and COPYING.LESSER. 
##
## Copyright:     (c) 1997-2012 Lawrence Livermore National Security, LLC
## Description:   makefile for nonlinear solver test 
##
#########################################################################

SAMRAI        = @top_srcdir@
SRCDIR        = @srcdir@
SUBDIR        = source/test/nonlinear
VPATH         = @srcdir@
TESTTOOLS     = ../testtools
OBJECT        = ../../..

default: check	

include $(OBJECT)/config/Makefile.config

CPPFLAGS_EXTRA= -DDISPLAY -DNDIM=$(PDIM)  -DTESTING=1

CXX_OBJS      = main.o ModifiedBratuProblem.o  \
	tbox_Pointer-CellPoissonFACSolver-NDIM.o tbox_Pointer-ModifiedBratuProblem.o
F_OBJS      =	\
	FACjacobian1d.o bcFluxCopy1d.o bcFluxFix1d.o bratufunc1d.o \
	err1d.o evalBratu1d.o evalDiffusionCoef1d.o evalExponential1d.o evalF1d.o \
	evalFaceFluxes1d.o evalJv1d.o evalSource1d.o setbc1d.o adjcrsfineoffdiag1d.o \
	\
	FACjacobian3d.o bcFluxCopy3d.o bcFluxFix3d.o bratufunc3d.o \
	err3d.o evalBratu3d.o evalDiffusionCoef3d.o evalExponential3d.o evalF3d.o \
	evalFaceFluxes3d.o evalJv3d.o evalSource3d.o setbc3d.o \
	\
	FACjacobian2d.o bcFluxCopy2d.o bcFluxFix2d.o bratufunc2d.o \
	err2d.o evalBratu2d.o evalDiffusionCoef2d.o evalExponential2d.o evalF2d.o \
	evalFaceFluxes2d.o evalJv2d.o evalSource2d.o setbc2d.o

NUM_TESTS = 2

TEST_NPROCS = @TEST_NPROCS@

main:	$(CXX_OBJS) $(F_OBJS) $(LIBSAMRAIDEPEND)
	$(CXX) $(CXXFLAGS) $(LDFLAGS) $(CXX_OBJS) $(F_OBJS)	\
	$(LIBSAMRAI) $(LDLIBS) -o main

check:
	$(MAKE) check2d
	echo Skipping for now: $(MAKE) check3d

check2d:	main
	@for i in test_inputs/*2d*.input ; do	\
	  $(OBJECT)/config/serpa-run $(TEST_NPROCS) \
		./main $${i};	\
	done

check3dx:	main
	@for i in test_inputs/*3d*.input ; do	\
	  $(OBJECT)/config/serpa-run $(TEST_NPROCS) \
		./main $${i};	\
	done

# Disable check3d from test, because it takes too long.
# It can be run using check3dx
check3d:	main

checkcompile: main

checktest:
	rm -f makecheck.logfile
	$(MAKE) check 2>&1 | $(TEE) makecheck.logfile
	$(TESTTOOLS)/testcount.sh $(TEST_NPROCS) $(NUM_TESTS) makecheck.logfile
	rm -f makecheck.logfile

clean-check:
	$(SAMCLEAN)

clean:		clean-check
	$(RM) *.o *.f main
	$(RM) -rf *visit

include $(SRCDIR)/Makefile.depend

FORTRAN       = $(SRCDIR)/fortran
M4DIRS        = -DFORTDIR=$(FORTRAN) $(SAMRAI_M4_FLAGS)

FACjacobian1d.o:	$(FORTRAN)/FACjacobian1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/FACjacobian1d.m4 > FACjacobian1d.f
	$(F77) $(FFLAGS) -c FACjacobian1d.f -o $@

adjcrsfineoffdiag1d.o:	$(FORTRAN)/adjcrsfineoffdiag1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/adjcrsfineoffdiag1d.m4 > adjcrsfineoffdiag1d.f
	$(F77) $(FFLAGS) -c adjcrsfineoffdiag1d.f -o $@

bcFluxCopy1d.o:	$(FORTRAN)/bcFluxCopy1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/bcFluxCopy1d.m4 > bcFluxCopy1d.f
	$(F77) $(FFLAGS) -c bcFluxCopy1d.f -o $@

bcFluxFix1d.o:	$(FORTRAN)/bcFluxFix1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/bcFluxFix1d.m4 > bcFluxFix1d.f
	$(F77) $(FFLAGS) -c bcFluxFix1d.f -o $@

bratufunc1d.o:	$(FORTRAN)/bratufunc1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/bratufunc1d.m4 > bratufunc1d.f
	$(F77) $(FFLAGS) -c bratufunc1d.f -o $@

err1d.o:	$(FORTRAN)/err1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/err1d.m4 > err1d.f
	$(F77) $(FFLAGS) -c err1d.f -o $@

evalBratu1d.o:	$(FORTRAN)/evalBratu1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalBratu1d.m4 > evalBratu1d.f
	$(F77) $(FFLAGS) -c evalBratu1d.f -o $@

evalDiffusionCoef1d.o:	$(FORTRAN)/evalDiffusionCoef1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalDiffusionCoef1d.m4 > evalDiffusionCoef1d.f
	$(F77) $(FFLAGS) -c evalDiffusionCoef1d.f -o $@

evalExponential1d.o:	$(FORTRAN)/evalExponential1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalExponential1d.m4 > evalExponential1d.f
	$(F77) $(FFLAGS) -c evalExponential1d.f -o $@

evalF1d.o:	$(FORTRAN)/evalF1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalF1d.m4 > evalF1d.f
	$(F77) $(FFLAGS) -c evalF1d.f -o $@

evalFaceFluxes1d.o:	$(FORTRAN)/evalFaceFluxes1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalFaceFluxes1d.m4 > evalFaceFluxes1d.f
	$(F77) $(FFLAGS) -c evalFaceFluxes1d.f -o $@

evalJv1d.o:	$(FORTRAN)/evalJv1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalJv1d.m4 > evalJv1d.f
	$(F77) $(FFLAGS) -c evalJv1d.f -o $@

evalSource1d.o:	$(FORTRAN)/evalSource1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalSource1d.m4 > evalSource1d.f
	$(F77) $(FFLAGS) -c evalSource1d.f -o $@

setbc1d.o:	$(FORTRAN)/setbc1d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/setbc1d.m4 > setbc1d.f
	$(F77) $(FFLAGS) -c setbc1d.f -o $@


FACjacobian2d.o:	$(FORTRAN)/FACjacobian2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/FACjacobian2d.m4 > FACjacobian2d.f
	$(F77) $(FFLAGS) -c FACjacobian2d.f -o $@

adjcrsfineoffdiag2d.o:	$(FORTRAN)/adjcrsfineoffdiag2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/adjcrsfineoffdiag2d.m4 > adjcrsfineoffdiag2d.f
	$(F77) $(FFLAGS) -c adjcrsfineoffdiag2d.f -o $@

bcFluxCopy2d.o:	$(FORTRAN)/bcFluxCopy2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/bcFluxCopy2d.m4 > bcFluxCopy2d.f
	$(F77) $(FFLAGS) -c bcFluxCopy2d.f -o $@

bcFluxFix2d.o:	$(FORTRAN)/bcFluxFix2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/bcFluxFix2d.m4 > bcFluxFix2d.f
	$(F77) $(FFLAGS) -c bcFluxFix2d.f -o $@

bratufunc2d.o:	$(FORTRAN)/bratufunc2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/bratufunc2d.m4 > bratufunc2d.f
	$(F77) $(FFLAGS) -c bratufunc2d.f -o $@

err2d.o:	$(FORTRAN)/err2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/err2d.m4 > err2d.f
	$(F77) $(FFLAGS) -c err2d.f -o $@

evalBratu2d.o:	$(FORTRAN)/evalBratu2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalBratu2d.m4 > evalBratu2d.f
	$(F77) $(FFLAGS) -c evalBratu2d.f -o $@

evalDiffusionCoef2d.o:	$(FORTRAN)/evalDiffusionCoef2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalDiffusionCoef2d.m4 > evalDiffusionCoef2d.f
	$(F77) $(FFLAGS) -c evalDiffusionCoef2d.f -o $@

evalExponential2d.o:	$(FORTRAN)/evalExponential2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalExponential2d.m4 > evalExponential2d.f
	$(F77) $(FFLAGS) -c evalExponential2d.f -o $@

evalF2d.o:	$(FORTRAN)/evalF2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalF2d.m4 > evalF2d.f
	$(F77) $(FFLAGS) -c evalF2d.f -o $@

evalFaceFluxes2d.o:	$(FORTRAN)/evalFaceFluxes2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalFaceFluxes2d.m4 > evalFaceFluxes2d.f
	$(F77) $(FFLAGS) -c evalFaceFluxes2d.f -o $@

evalJv2d.o:	$(FORTRAN)/evalJv2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalJv2d.m4 > evalJv2d.f
	$(F77) $(FFLAGS) -c evalJv2d.f -o $@

evalSource2d.o:	$(FORTRAN)/evalSource2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalSource2d.m4 > evalSource2d.f
	$(F77) $(FFLAGS) -c evalSource2d.f -o $@

setbc2d.o:	$(FORTRAN)/setbc2d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/setbc2d.m4 > setbc2d.f
	$(F77) $(FFLAGS) -c setbc2d.f -o $@


FACjacobian3d.o:	$(FORTRAN)/FACjacobian3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/FACjacobian3d.m4 > FACjacobian3d.f
	$(F77) $(FFLAGS) -c FACjacobian3d.f -o $@

adjcrsfineoffdiag3d.o:	$(FORTRAN)/adjcrsfineoffdiag3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/adjcrsfineoffdiag3d.m4 > adjcrsfineoffdiag3d.f
	$(F77) $(FFLAGS) -c adjcrsfineoffdiag3d.f -o $@

bcFluxCopy3d.o:	$(FORTRAN)/bcFluxCopy3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/bcFluxCopy3d.m4 > bcFluxCopy3d.f
	$(F77) $(FFLAGS) -c bcFluxCopy3d.f -o $@

bcFluxFix3d.o:	$(FORTRAN)/bcFluxFix3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/bcFluxFix3d.m4 > bcFluxFix3d.f
	$(F77) $(FFLAGS) -c bcFluxFix3d.f -o $@

bratufunc3d.o:	$(FORTRAN)/bratufunc3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/bratufunc3d.m4 > bratufunc3d.f
	$(F77) $(FFLAGS) -c bratufunc3d.f -o $@

err3d.o:	$(FORTRAN)/err3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/err3d.m4 > err3d.f
	$(F77) $(FFLAGS) -c err3d.f -o $@

evalBratu3d.o:	$(FORTRAN)/evalBratu3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalBratu3d.m4 > evalBratu3d.f
	$(F77) $(FFLAGS) -c evalBratu3d.f -o $@

evalDiffusionCoef3d.o:	$(FORTRAN)/evalDiffusionCoef3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalDiffusionCoef3d.m4 > evalDiffusionCoef3d.f
	$(F77) $(FFLAGS) -c evalDiffusionCoef3d.f -o $@

evalExponential3d.o:	$(FORTRAN)/evalExponential3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalExponential3d.m4 > evalExponential3d.f
	$(F77) $(FFLAGS) -c evalExponential3d.f -o $@

evalF3d.o:	$(FORTRAN)/evalF3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalF3d.m4 > evalF3d.f
	$(F77) $(FFLAGS) -c evalF3d.f -o $@

evalFaceFluxes3d.o:	$(FORTRAN)/evalFaceFluxes3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalFaceFluxes3d.m4 > evalFaceFluxes3d.f
	$(F77) $(FFLAGS) -c evalFaceFluxes3d.f -o $@

evalJv3d.o:	$(FORTRAN)/evalJv3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalJv3d.m4 > evalJv3d.f
	$(F77) $(FFLAGS) -c evalJv3d.f -o $@

evalSource3d.o:	$(FORTRAN)/evalSource3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/evalSource3d.m4 > evalSource3d.f
	$(F77) $(FFLAGS) -c evalSource3d.f -o $@

setbc3d.o:	$(FORTRAN)/setbc3d.m4
	$(M4) $(M4DIRS) $(FORTRAN)/setbc3d.m4 > setbc3d.f
	$(F77) $(FFLAGS) -c setbc3d.f -o $@


