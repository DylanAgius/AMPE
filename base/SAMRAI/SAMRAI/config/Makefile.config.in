#########################################################################
##
## This file is part of the SAMRAI distribution.  For full copyright 
## information, see COPYRIGHT and COPYING.LESSER. 
##
## Copyright:     (c) 1997-2012 Lawrence Livermore National Security, LLC
## Description:   configuration makefile included by all SAMRAI makefiles 
##
#########################################################################

@TAU_INCLUDE@

.SUFFIXES:
.SUFFIXES: .o .F .f .c .C .cc

DIM_OBJS = ${DIM_SRC:X.C=${NDIM}.o}

#
# The sed src_file finds the X.C file in the list of prerequisites. One would think
# this would exist as a Makefile symbol but the "$<" symbol is only usable in
# suffix rules. The sed rule extracts the .C filename.  This ONLY works
# if the .C file is changed.  It will break if only the .I or .h files
# change.  Thus is can be used for an intial build but does not
# really work in a development environment.
#
#
# Uncomment the following 4 lines for non GNU make compatiblity
# ${DIM_OBJS} :
# 	@src_file=`echo $? | sed  's/^\(.*\) \(.*X.C\) \(.*\)/\2/;s/^\(.*X.C\) \(.*\)/\1/'`; \
# 	echo $(CXX) -DNDIM=${NDIM} $(CXXFLAGS) $(CPPFLAGS) -c  $$src_file -o $@; \
# 	$(CXX) -DNDIM=${NDIM} $(CXXFLAGS) $(CPPFLAGS) -c  $$src_file -o $@

# Comment out these 2 lines if using not using GNU make
%${NDIM}.o : %X.C
	$(CXX) -DNDIM=${NDIM} $(CXXFLAGS) $(CPPFLAGS) -c $< -o $@

.F.o:
	$(F77) $(FFLAGS) -DNDIM=${NDIM} -c @SRCDIR_COMPILE_PREFIX@$< -o $@
.f.o:
	$(F77) $(FFLAGS) -c @SRCDIR_COMPILE_PREFIX@$< -o $@
.c.o:
	$(CC) $(CFLAGS) $(CPPFLAGS) -c @SRCDIR_COMPILE_PREFIX@$< -o $@
.C.o:
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c @SRCDIR_COMPILE_PREFIX@$< -o $@
.cc.o:
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c @SRCDIR_COMPILE_PREFIX@$< -o $@

SHELL         = /bin/sh

SAMRAI_TARGET=@SAMRAI_TARGET@

INCLUDE_SAM   = $(SAMRAI)/source
LIB_SAM       = $(OBJECT)/lib
BIN_SAM       = $(OBJECT)/bin

LIB_SUFFIX=@LIB_SUFFIX@

#
# GNUMake script to reverse strings.  This is recursive.
#
reverse = $(if $(1),$(call reverse,$(wordlist 2,$(words $(1)),$(1)))) $(firstword $(1))

#
# List of packages to process. 
# 
# Packages available : appu algs solv geom mesh math pdat xfer hier tbox
SAMRAI_LIBRARIES:=@SAMRAI_LIBRARIES@
SAMRAI_LIBRARIES_R:=$(call reverse,@SAMRAI_LIBRARIES@)

LIBSAMRAI=$(addsuffix $(LIB_SUFFIX),$(addprefix $(LIB_SAM)/libSAMRAI_,$(SAMRAI_LIBRARIES)))

LIBSAMRAIDEPEND   = $(LIBSAMRAI)

M4	      =	@M4@
RM            = rm -fr
CP            = cp
TEE           = tee
XARGS	      = @XARGS@

F77           = @F77@
FFLAGS        = @F77_FLAGS@ $(FFLAGS_EXTRA)

CC            = @CC@
CFLAGS        = @C_FLAGS@ $(CFLAGS_EXTRA)

CXX           = @CXX@
CXXFLAGS      =	@CXX_FLAGS@ $(CXXFLAGS_EXTRA)

CPPFLAGS_EXTRA= @CPPFLAGS_EXTRA@
CPPFLAGS      = @CPPFLAGS@ -I. -I$(OBJECT)/include -I$(INCLUDE_SAM) @INC_PATH@ $(CPPFLAGS_EXTRA)

AR	      = @AR@

LDFLAGS       = @LD_FLAGS@ -L$(LIB_SAM) @LIB_PATH@ $(LDFLAGS_EXTRA)
LDLIBS        = $(LDLIBS_EXTRA) @LIB_NAME@

CXXLD_FLAGS   = -L$(LIB_SAM) @CXXLD_FLAGS@ @LIB_PATH@ $(LDFLAGS_EXTRA)
CXXLDLIBS     = $(LDLIBS_EXTRA) @LIB_NAME@

SAMRAI_M4_FLAGS = -DSAMRAI_FORTDIR=$(INCLUDE_SAM)/SAMRAI/pdat/fortran

# Are object files dependent on template implementation files (.C)
DEPENDS_ON_TEMPLATE_IMPLEMENTATION=@DEPENDS_ON_TEMPLATE_IMPLEMENTATION@

# Should the special SAMRAI targets be included in the Makefile.config
DEVELOPER_MAKEFILE=@DEVELOPER_MAKEFILE@

######################################################################
# Rules used in all directories.
######################################################################

SAMCLEAN=@$(RM) *.o *.ii *.int.c *.log *.log.* stamp-* core core.* stats -r ti_files ii_files \
		*.valgrind

# Used to control which types are created.
# Default is double, integer, bool, float, complex, char
SAMRAI_LIBRARY_TARGETS=libdefault

######################################################################
# Rules for SAMRAI developer builds only.
# These may conflict with user Makefiles, leave them off by default.
######################################################################

ifeq (${DEVELOPER_MAKEFILE},yes)

Makefile: $(SAMRAI)/$(SUBDIR)/Makefile.in  $(OBJECT)/config.status
	cd $(OBJECT) && $(SHELL) ./config.status --file=$(SUBDIR)/$@

endif


