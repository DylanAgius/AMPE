// Copyright (c) 2018, Lawrence Livermore National Security, LLC.
// Produced at the Lawrence Livermore National Laboratory
// Written by M.R. Dorr, J.-L. Fattebert and M.E. Wickett
// LLNL-CODE-747500
// All rights reserved.
// This file is part of AMPE. 
// For details, see https://github.com/LLNL/AMPE
// Please also read AMPE/LICENSE.
// Redistribution and use in source and binary forms, with or without 
// modification, are permitted provided that the following conditions are met:
// - Redistributions of source code must retain the above copyright notice,
//   this list of conditions and the disclaimer below.
// - Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the disclaimer (as noted below) in the
//   documentation and/or other materials provided with the distribution.
// - Neither the name of the LLNS/LLNL nor the names of its contributors may be
//   used to endorse or promote products derived from this software without
//   specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL LAWRENCE LIVERMORE NATIONAL SECURITY,
// LLC, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
// IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
// 
end_time = 10.0
//max_timesteps = 20

verbosity = 1

Amr {
   enabled = TRUE

   Regrid {
      interval = 0.1
      interval_type = "time"
   }

   TaggingCriteria {
      Phase {
         threshold_untagged = 0.04
         threshold_tagged = 0.02
      }
   }

   GriddingAlgorithm{
      max_levels = 2

      ratio_to_coarser {
         level_1 = 2, 2
      }

      largest_patch_size {
         level_0 = 1280, 1280
      }

      smallest_patch_size {
         level_0 = 10, 10
      }

      efficiency_tolerance    = 0.85e0
      combine_efficiency      = 0.95e0

      allow_patches_smaller_than_ghostwidth = TRUE
      resolve_nonnesting_tags = 'e'
   }
}

Restart {
   interval = 500
}

InitialConditions {
   //filename = "init_circle_128_q1_two_2.nc"
   filename = "init_sphere_128_q4_two.nc"
   amr_level_of_data = 1
}

Geometry {
   coarsest_level_resolution = 64, 64
   x_lo = -1.0, -1.0
   x_up =  1.0,  1.0
}

Visit {
   interval = 0.5
   interval_type = "time"
}

ModelParameters {
   H_parameter = 1.5
   temperature = 1.0

   epsilon_phi = 0.125
   epsilon_orient = 0.075

   phi_mobility = 1.0
   orient_mobility = 10.0

   free_energy_solid = 0.0
   free_energy_liquid = 1.0
}

Integrator {
   tolerance = 3.e-4
}
