# Copyright (c) 2018, Lawrence Livermore National Security, LLC.
# Produced at the Lawrence Livermore National Laboratory
# Written by M.R. Dorr, J.-L. Fattebert and M.E. Wickett
# LLNL-CODE-747500
# All rights reserved.
# This file is part of AMPE. 
# For details, see https://github.com/LLNL/AMPE
# Please also read AMPE/LICENSE.
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions are met:
# - Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the disclaimer below.
# - Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the disclaimer (as noted below) in the
#   documentation and/or other materials provided with the distribution.
# - Neither the name of the LLNS/LLNL nor the names of its contributors may be
#   used to endorse or promote products derived from this software without
#   specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL LAWRENCE LIVERMORE NATIONAL SECURITY,
# LLC, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# 
include @SAM_CONFIG_DIR@/Makefile.config
include @CONFIG_DIR@/Makefile.config

VPATH		= @SOURCE_DIR@

NETCDF         = @netcdf_PREFIX@

GITVERSION := $(shell git describe --abbrev=4 --dirty --always --tags)
CPPFLAGS_EXTRA= -DNDIM=$(PDIM) -DGITVERSION="$(GITVERSION)"

CALPHAD_OBJS = CALPHADFunctions.o CALPHADFreeEnergyFunctionsBinary.o \
		CALPHADConcSolverTernary.o CALPHADEqConcSolverTernary.o CALPHADFreeEnergyFunctionsTernary.o \
      NewtonSolver.o DampedNewtonSolver.o QuatModelParameters.o \
		CompositionStrategyMobilities.o \
		CALPHADSpeciesPhaseGibbsEnergy.o CALPHADMobility.o \
		CALPHADFreeEnergyStrategy.o CALPHADFreeEnergyFunctionsWithPenaltyBinary.o \
		CALPHADEqConcSolverBinaryWithPenalty.o CALPHADEqConcSolverBinary.o \
      CALPHADConcSolverBinaryWithPenalty.o CALPHADConcSolverBinary.o tools.o \
      FreeEnergyStrategy.o

CXX_OBJS      = DiffusionForConcInPhaseStrategy.o \
		QuatIntegrator.o \
		UTRCCompositionRHSStrategy.o \
                ConstantHeatCapacityStrategy.o PFModel.o \
                CartesianRobinBcHelperWithDepth.o \
                ConstantMeltingTemperatureStrategy.o \
                LinearMeltingTemperatureStrategy.o \
                PartitionCoeffRefinePatchStrategy.o PartitionCoefficientStrategy.o AzizPartitionCoefficientStrategy.o \
                UniformPartitionCoefficientStrategy.o \
                PartitionPhaseConcentrationsStrategy.o \
                NKRHeatCapacityStrategy.o \
                PhaseFluxStrategySimple.o PhaseFluxStrategyAnisotropy.o \
                TemperatureStrategyFactory.o QuatModel.o QuatRefinePatchStrategy.o \
		ran2.o BiasDoubleWellFreeEnergyStrategy.o \
                SimpleGradStrategy.o \
                SimpleQuatGradStrategy.o SimpleQuatMobilityStrategy.o \
                QuatSysSolver.o QuatFACOps.o QuatLevelSolver.o \
                QuatLinearRefine.o QuatWeightedAverage.o \
                MinIntCoarsen.o PhaseFreeEnergyStrategy.o \
                TemperatureFreeEnergyStrategy.o \
                CPODESSolver.o CPODESAbstractFunctions.o \
                PoissonSpecifications.o \
                CellPoissonHypreSolver.o EventInterval.o \
                HBSMFreeEnergyStrategy.o \
                HBSMequilibriumPhaseConcentrationsStrategy.o \
                CALPHADFreeEnergyStrategyWithPenalty.o \
                CALPHADequilibriumPhaseConcentrationsStrategy.o \
                GaussianTemperatureStrategy.o ScalarTemperatureStrategy.o \
                SteadyStateTemperatureStrategy.o SteadyStateTemperatureGaussianSource.o SteadyStateTemperatureCompositionSource.o \
                EllipticFACSolver.o EllipticFACOps.o \
                PhaseConcentrationRefinePatchStrategy.o PhaseConcentrationsStrategy.o \
                PhaseFACSolver.o PhaseFACOps.o \
                EtaFACSolver.o EtaFACOps.o \
                ConcFACSolver.o ConcFACOps.o \
                KKSCompositionRHSStrategy.o EBSCompositionRHSStrategy.o \
                CompositionRHSStrategy.o \
                GrainNumberRefinePatchStrategy.o Grains.o \
                TemperatureFACSolver.o TemperatureFACOps.o \
                $(CALPHAD_OBJS)

MAIN_OBJ = main.o
TEST_CALPHAD_BINARY_MAIN_OBJ = testCALPHADbinary.o
TEST_CALPHAD_TERNARY_MAIN_OBJ = testCALPHADternary.o

F77_OBJS      = quat.o functions.o dnsqe.o

F77_OBJS_2D   = settozero.o quatrhs.o quatdiffusion.o correctrhsquatforsymmetry.o \
		quatfacops.o quatlevelsolver.o mobility.o temperature.o \
		quatdiffs.o grad.o quatgrad.o quattag.o quatlinrefine.o \
		quatcoarsen.o quatenergy.o concentrationdiffusion.o \
		concentrations.o concentrationrhs.o quatrotation.o ellipticfacops.o \
		smoothquat.o

F77_OBJS_3D   = settozero.o quatrhs.o quatdiffusion.o correctrhsquatforsymmetry.o \
		quatfacops.o quatlevelsolver.o mobility.o temperature.o \
		quatdiffs.o grad.o quatgrad.o quattag.o quatlinrefine.o \
		quatcoarsen.o quatenergy.o concentrationdiffusion.o \
		concentrations.o concentrationrhs.o quatrotation.o ellipticfacops.o \
		smoothquat.o

CXXFLAGS += -I$(NETCDF)/include
LDFLAGS += -L $(NETCDF)/lib
LDLIBS += -lnetcdf_c++ -lnetcdf 

default:        ampe2d

ampe2d:		
		if test -f stamp-3d; then $(MAKE) clean; fi
		touch stamp-2d
		$(MAKE) PDIM=2 ampe-2d
		mkdir -p ../exec && mv ampe2d ../exec/ampe2d

ampe-2d:	$(CXX_OBJS) $(MAIN_OBJ) $(F77_OBJS) $(F77_OBJS_2D) $(LIBSAMRAIDEPEND)  
		$(CXX) $(CXXFLAGS) $(LDFLAGS) $(CXX_OBJS) $(MAIN_OBJ) $(F77_OBJS) $(F77_OBJS_2D) \
		$(LIBSAMRAI) $(LDLIBS) -o ampe2d

ampe3d:		
		if test -f stamp-2d; then $(MAKE) clean; fi
		touch stamp-3d
		$(MAKE) PDIM=3 ampe-3d
		mkdir -p ../exec && mv ampe3d ../exec/ampe3d

ampe-3d:	$(CXX_OBJS) $(MAIN_OBJ) $(F77_OBJS) $(F77_OBJS_3D) $(LIBSAMRAIDEPEND)
		$(CXX) $(CXXFLAGS) $(LDFLAGS) $(CXX_OBJS) $(MAIN_OBJ) $(F77_OBJS) $(F77_OBJS_3D) \
		$(LIBSAMRAI) $(LDLIBS) -o ampe3d

testCALPHADbinary:		
		$(MAKE) PDIM=2 test-CALPHAD-binary
		mkdir -p ../exec && mv testCALPHADbinary ../exec/testCALPHADbinary

test-CALPHAD-binary:	$(CALPHAD_OBJS) $(TEST_CALPHAD_BINARY_MAIN_OBJ) $(F77_OBJS) $(LIBSAMRAIDEPEND)  
		$(CXX) $(CXXFLAGS) $(LDFLAGS) $(CALPHAD_OBJS) $(TEST_CALPHAD_BINARY_MAIN_OBJ) $(F77_OBJS) \
		$(LIBSAMRAI) $(LDLIBS) -o testCALPHADbinary

testCALPHADternary:		
		$(MAKE) PDIM=2 test-CALPHAD-ternary
		mkdir -p ../exec && mv testCALPHADternary ../exec/testCALPHADternary

test-CALPHAD-ternary:	$(CALPHAD_OBJS) $(TEST_CALPHAD_TERNARY_MAIN_OBJ) $(F77_OBJS) $(LIBSAMRAIDEPEND)  
		$(CXX) $(CXXFLAGS) $(LDFLAGS) $(CALPHAD_OBJS) $(TEST_CALPHAD_TERNARY_MAIN_OBJ) $(F77_OBJS) \
		$(LIBSAMRAI) $(LDLIBS) -o testCALPHADternary

clean:
		$(SAMCLEAN)
		$(RM) *.o *.f ampe ampe2d ampe3d 

redo:
		$(RM) core ampe*d

FORTRAN		= $(VPATH)/fortran/$(PDIM)d
FORTCOMM	= $(VPATH)/fortran
M4DIRS		= -DFORTDIR=$(FORTRAN) -DSAMRAI_FORTDIR=$(SAMRAI)/include/SAMRAI/pdat/fortran \
		  -DFORT_COMMON_DIR=$(FORTCOMM)

# Rule for the m4-preprocessed fortran files

# Rules for fortran files

%.o:		$(FORTRAN)/%.f
		cp $(FORTRAN)/$*.f $*.f
		$(F77) $(FFLAGS) -c $*.f -o $@

%.o:		$(FORTRAN)/%.m4
		$(M4) $(M4DIRS) $(FORTRAN)/$*.m4 > $*.f
		$(F77) $(FFLAGS) -c $*.f -o $@

%.o:		$(FORTCOMM)/%.f
		cp $(FORTCOMM)/$*.f $*.f
		$(F77) $(FFLAGS) -c $*.f -o $@

%.o:		$(FORTCOMM)/%.m4
		$(M4) $(M4DIRS) $(FORTCOMM)/$*.m4 > $*.f
		$(F77) $(FFLAGS) -c $*.f -o $@

# Include dependencies.  This file is generated when the configure script is run at the
# top level.  The configure script should therefore be re-run if any changes are made
# to this Makefile.in makefile template that may alter the dependencies (or, if you aren't
# really sure).

include $(VPATH)/Makefile.depend

