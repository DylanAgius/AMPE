// Copyright (c) 2018, Lawrence Livermore National Security, LLC.
// Produced at the Lawrence Livermore National Laboratory
// Written by M.R. Dorr, J.-L. Fattebert and M.E. Wickett
// LLNL-CODE-747500
// All rights reserved.
// This file is part of AMPE. 
// For details, see https://github.com/LLNL/AMPE
// Please also read AMPE/LICENSE.
// Redistribution and use in source and binary forms, with or without 
// modification, are permitted provided that the following conditions are met:
// - Redistributions of source code must retain the above copyright notice,
//   this list of conditions and the disclaimer below.
// - Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the disclaimer (as noted below) in the
//   documentation and/or other materials provided with the distribution.
// - Neither the name of the LLNS/LLNL nor the names of its contributors may be
//   used to endorse or promote products derived from this software without
//   specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL LAWRENCE LIVERMORE NATIONAL SECURITY,
// LLC, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
// IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
// 
// Input for grain growth
// Units are:
//   length: um = 10^-6 m
//   energy: pJ = 10^-12 J
//
model_type = "KWCcomplex"

end_time            = 1500.
max_timesteps       = 10000

Verbosity {  // optional, block
   level = 3  // optional, default=1
}

Visit {
   interval = 150.
   interval_type = "time"
}

ModelParameters {
   H_parameter = -1.
   
   temperature        = 1173. // [K]
   
   epsilon_phi = 1.   // [(pJ/um)^1/2]

   phi_mobility = 1.
   
   phi_well_scale = 1.
   phi_well_func_type = "double"
   phi_interp_func_type ="pbg"

   ConcentrationModel {
      model    = "calphad"
      rhs_form = "ebs"
      molar_volume = 4.8e-5 // [m^3/mol] at 80% Ni/20% Au
      Calphad {
         filename ="calphadAuNi.dat"
      }
   }
}

ScalarDiagnostics {
   interval = 50.
   interval_type = "time"
}   

Integrator {
   atol = 1.e-5
   Preconditioner {  // optional block
      enabled = TRUE  // optional, default=TRUE
      precondition_phase = FALSE  // optional, default=TRUE
   }
}

InitialConditions {
   filename = "Au_in_Ni_512x16_r16.nc"
}

Geometry{
   coarsest_level_resolution = 512, 16
   x_lo         = -100., -3.125 // [um]
   x_up         =  100.,  3.125 // [um]
}

TimerManager { 
    timer_list = "solv::*::*","xfer::*::*","PFModel::*",
                 "QuatIntegrator::*","EllipticFACOps::*",
                 "CellPoissonHypreSolver::*"
    print_threshold = 0.0
}

